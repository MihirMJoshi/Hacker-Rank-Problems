#include <bits/stdc++.h>
using namespace std;

// Logic Implementation: Find out total number of bits required when expressed in binary
// 2^bits_size - number - 1 = possible combinations for greater XOR than n

// Total number of possible combinations = n

// using above two statements, possible combinations for lesser XOR than n would be n - 2^bits_size - number - 1

void GreatXor(long x) 
{
  long c = 0; long temp = x;
  while (x) 
  {
    c++;
    x >>= 1;
  }
  long pown = pow(2, c);
  cout << (pown - temp - 1)<<endl;
}

int main() 
{
  int q; long x;
  cin >> q;
  
  for (int i = 0; i < q; i++) 
  {
    cin >> x;
    GreatXor(x);
  }
  return 0;
}

