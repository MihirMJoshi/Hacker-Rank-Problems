#include<iostream>
using namespace std;

int calculate (int mid, int down, int up, int right, int left)
{
    if  (left>=mid)   left=mid;
    if  (right>=mid)  right=mid;
    if  (up>=mid)     up=mid;
    if  (down>=mid)   down=mid;
    int total = 2+4*mid-left-up-right-down;
    return total;
}

int main()
{
    int h,w;
    cin>>h>>w;
    int matrix[h+2][w+2];
    for (int i=0; i<(h+2); i++)   // keep 2 distance for padding up zeros (since its 2*2)
        for (int j=0; j<(w+2); j++)
        {
            if (i == 0 || i == (h+1) || j == 0 || j == (w+1)) // all the first rows and columns                                                                    are kept for padding purposes
                matrix[i][j]=0;
            else
                cin>>matrix[i][j];                            // taking all input values
        }
    
    int sum=0;
    for (int i=0; i<(h+2); i++)                          // calculating the visible                                      
        for (int j=0; j<(w+2); j++)                                                                       {
            if (i!=0 && j!=0 && i!=(h+1) && j!=(w+1))
                sum += calculate (matrix[i][j], matrix[i+1][j], matrix[i-1][j], matrix[i][j+1], matrix[i][j-1]);                                        // sum is being calculated overall
            }
    cout<<sum;
    return 0;
}
