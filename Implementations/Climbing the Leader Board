#include <bits/stdc++.h>

using namespace std;

vector <int> climbingLeaderboard(vector<int> scores, vector<int> alice)
{
    // Assign the ranks first
    int h_rank=1;
    for (int i=scores.size()-1; i>0; i--)
    {
    if (scores[i] != scores[i-1])
        h_rank++;
    }
    h_rank++;    
vector<int> ranks(alice.size());
int j = scores.size()-1;
    for (int i=0; i<alice.size(); i++)
    {
        while (alice[i] >= scores[j])
        {
            if (h_rank==1)
                break;
            if (scores[j]==scores[j-1])
                j--;
            else
            {
                j--;
                h_rank--;
            }
        }
        ranks[i] = h_rank;
    }
return ranks;
}

int main() 
{
    int n;
    cin >> n;
    vector<int> scores(n);
    for(int scores_i = 0; scores_i < n; scores_i++){
       cin >> scores[scores_i];
}
    int m;
    cin >> m;
    vector<int> alice(m);
    for(int alice_i = 0; alice_i < m; alice_i++)
    {   // To be entered in decreasing format
       cin >> alice[alice_i];
    }
    vector <int> result = climbingLeaderboard(scores, alice);
    for (ssize_t i = 0; i < result.size(); i++)
    {
        cout << result[i] << (i != result.size() - 1 ? "\n" : "");
    }
    cout << endl;


    return 0;
}
